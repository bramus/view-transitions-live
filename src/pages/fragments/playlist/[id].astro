---
import BackgroundVideo from '../../../components/BackgroundVideo.astro'
import CardStats from '../../../components/CardStats.astro'
import FloatingSquares from '../../../components/FloatingSquares.astro'
import PlaylistDetails from '../../../components/PlaylistDetails.astro'
import PlaylistHeader from '../../../components/PlaylistHeader.astro'
import PlaylistMedia from '../../../components/PlaylistMedia.astro'
import data from '../../../data.json'

export function getStaticPaths() {
  return data.map((playlist) => ({
    params: { id: playlist.id },
  }))
}

const playlist = data.find((p) => p.id === Astro.params.id) || data[0]

const {
  title,
  description,
  stats,
  user,
  backgroundColor,
  backgroundImage,
  backgroundAnimation,
  media,
  textColor,
  secondaryTextColor,
} = playlist
---

<main
  class="playlist-container with-transition"
  style={`
  --backgroundColor: ${backgroundColor};
  --textColor: ${textColor};
  --backgroundImage: ${backgroundImage ? `url('${backgroundImage}')` : 'none'};
  --secondaryTextColor: ${secondaryTextColor};
`}
>
  <header>
    {
      backgroundAnimation === 'floatingSquares' ? (
        <FloatingSquares />
      ) : backgroundAnimation === 'purpleVideo' ? (
        <BackgroundVideo />
      ) : (
        <div class="solid-background playlist-background" />
      )
    }
    <PlaylistHeader {...user} />
    <h1 class="playlist-title">{title}</h1>
    <CardStats {...stats} />
    <p class="playlist-description">{description}</p>
    <PlaylistMedia title={title} media={media} />
  </header>
  <PlaylistDetails />
</main>

<style is:inline>
  :root {
    --header-height: 875px;
    --header-height-small: 120px;
    --header-animation-range: calc(var(--header-height) - var(--header-height-small));
  }
  .playlist-container {
    margin: 0 auto;
    padding: 0;
    max-width: 600px;
    position: relative;
    padding-top: var(--header-height);
  }

  @keyframes shrink-header {
    to {
      height: var(--header-height-small);
    }
  }

  .playlist-container > header {
    color: var(--textColor);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    /* Fixated position and size of header */
    position: fixed;
    width: 100vw;
    max-width: 600px;
    top: 0;
    height: var(--header-height);
    overflow: hidden;

    /* Shrink down header as you scroll up. See https://scroll-driven-animations.style/demos/cover-to-fixed-header/css/ for details */
    animation: shrink-header linear forwards;
    animation-timeline: scroll(root);
    animation-range: 0 var(--header-animation-range);
  }

  .playlist-container .solid-background {
    background: var(--backgroundColor);
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;

    background-image: var(--backgroundImage);
    background-repeat: repeat-y;
    background-size: contain;
  }

  .playlist-container h1 {
    margin: 10px 0 15px;
    font-size: 3rem;
    text-align: center;
    z-index: 1;
  }

  .playlist-container p {
    text-align: center;
    max-width: 360px;
    line-height: 1.6;
    color: var(--secondaryTextColor);
    z-index: 1;
  }
</style>
